[{"C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\index.js":"1","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\router.js":"2","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\main\\App.js":"3","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\toLk\\toLk.js":"4","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\lk\\lk.js":"5","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\toHome\\toHome.js":"6","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\toLk\\toAuth.js":"7","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\home\\home.js":"8","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\auth\\auth.js":"9","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\reg\\reg.js":"10","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\toLk\\toAuthHome.js":"11"},{"size":338,"mtime":1677182976000,"results":"12","hashOfConfig":"13"},{"size":339,"mtime":1677183062000,"results":"14","hashOfConfig":"13"},{"size":3077,"mtime":1678641884782,"results":"15","hashOfConfig":"13"},{"size":402,"mtime":1677188192000,"results":"16","hashOfConfig":"13"},{"size":5771,"mtime":1678627347352,"results":"17","hashOfConfig":"13"},{"size":405,"mtime":1677188202000,"results":"18","hashOfConfig":"13"},{"size":408,"mtime":1678641866213,"results":"19","hashOfConfig":"13"},{"size":8793,"mtime":1678808493260,"results":"20","hashOfConfig":"13"},{"size":5917,"mtime":1678626160037,"results":"21","hashOfConfig":"13"},{"size":5828,"mtime":1678626197772,"results":"22","hashOfConfig":"13"},{"size":418,"mtime":1678641869727,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"8ro4ct",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\index.js",["64"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './main/App.js';\nimport Rout from './router.js'\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n      <App/>\n  </BrowserRouter>\n); ","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\router.js",["65","66"],[],"import React from 'react';\r\nimport App from './main/App.js'\r\nimport { Route, Router, Routes } from 'react-router-dom';\r\n\r\nfunction Rout(){\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                {/* <Route path = \"/home\" element = {<Home/>} /> */}\r\n            </Routes>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Rout;","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\main\\App.js",["67","68","69","70"],[],"import React, { useState } from 'react';\nimport '../main/App.css';\nimport ToHome from '../toHome/toHome.js';\n// import ToArhiv from '../toArhiv/toArhiv.js';\n//import ToTest from '../toTest/toTest.js'\nimport ToLk from '../toLk/toLk.js';\nimport { Router, Routes, Route, Link } from 'react-router-dom';\nimport Home from '../home/home.js';\n//import Arhiv from '../arhiv/arhiv.js';\nimport Lk from '../lk/lk.js';\nimport Auth from '../auth/auth.js';\nimport Reg from '../reg/reg.js';\n//import Test from '../test/test.js';\nimport ToAuth from '../toLk/toAuth.js';\nimport ToAuthHome from '../toLk/toAuthHome.js';\n\nconst date = require('../config.json')\nconst HOST = date['HOST']\nconst PORT = date['PORT']\nconst URL = 'http://' + HOST + ':' + PORT\n\nfunction get_cooks() {\n    let cookies = document.cookie;\n    if (cookies === '') {\n        cookies = 'user= ;passw= '\n    }\n    cookies = cookies.split(';')\n    console.log(cookies)\n    let CookiesArr = {}\n    for (let i = 0; i < cookies.length; i++) {\n        let cookie = cookies[i];\n        let cookieParts = cookie.split(\"=\");\n        let cookieName = cookieParts[0].trim();\n        let cookieValue = cookieParts[1].trim();\n        CookiesArr[cookieName] = cookieValue\n    }\n    return CookiesArr\n}\n\nfunction App(){\n    const [page, setPage] = useState({\n        linker: null\n    })\n    const [page1, setPage1] = useState({\n        linker1: null\n    })\n\n    function onl (){\n        const allCookies = get_cooks()\n        fetch(URL + '/auth', {\n            method: 'POST',\n            body: JSON.stringify({\n                mail: allCookies['user'],\n                passw: allCookies['passw']\n            })\n        })\n    .then(response => {\n        console.log(\"Success\");\n        return response.json().then(data => {\n            return data[\"ok\"]\n        })\n    }).then(data => {\n        console.log(data)\n        if (data && (page.linker == <ToAuth/> || page.linker == null)){\n            console.log('LOADED LK PAGE')\n            // window.location.assign('/lk ')\n            setPage({\n                linker: <ToLk/>\n            })\n            setPage1({\n                linker1: <ToHome/>\n            })\n        }\n        if (!data && (page.linker == <ToLk/> || page.linker == null)){\n            console.log('LOADED AUTH PAGE')\n            // window.location.assign('/auth')\n            setPage({\n                linker: <ToAuth/>\n            })\n            setPage1({\n                linker1: <ToAuthHome/>\n            })\n        }\n    })\n    }\n    onl()\n\n    return (\n        <div className = 'main'>\n            <div className = 'board'>\n                {page1.linker1}\n                {page.linker}\n            </div>\n            <div className = 'content'>\n                <Routes>\n                    <Route path = \"/\" element = {<Home/>} />\n                    <Route path = \"/auth\" element = {<Auth/>} />\n                    <Route path = \"/reg\" element = {<Reg/>} />\n                    <Route path = \"/lk\" element = {<Lk/>} />\n                </Routes>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\toLk\\toLk.js",[],[],"C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\lk\\lk.js",["71","72"],[],"import React, { useEffect, useState } from \"react\";\r\nimport './lk.css'\r\n\r\nconst date = require('../config.json')\r\nconst HOST = date['HOST']\r\nconst PORT = date['PORT']\r\nconst URL = 'http://' + HOST + ':' + PORT\r\n\r\nfunction get_cooks() {\r\n    let cookies = document.cookie;\r\n    if (cookies === '') {\r\n        cookies = 'user= ;passw= '\r\n    }\r\n    cookies = cookies.split(';')\r\n    console.log(cookies)\r\n    let CookiesArr = {}\r\n    for (let i = 0; i < cookies.length; i++) {\r\n        let cookie = cookies[i];\r\n        let cookieParts = cookie.split(\"=\");\r\n        let cookieName = cookieParts[0].trim();\r\n        let cookieValue = cookieParts[1].trim();\r\n        CookiesArr[cookieName] = cookieValue\r\n    }\r\n    return CookiesArr\r\n}\r\n\r\nfunction Lk(){\r\n    const [TgAddOk, setTgAddOk] = useState('tg0')\r\n    const [TgAddText, setTgText] = useState('Не привязан')\r\n\r\n    const leave = (e) => {\r\n        document.cookie = 'user= '\r\n        document.cookie = 'passw= '\r\n        window.location.assign('/auth ')\r\n        // fetch(URL + '/getip/?' + new URLSearchParams({leave: true}).toString(),{\r\n        //     method: 'GET'\r\n        // })\r\n        // .then(response => {\r\n        //     console.log(\"Success\");\r\n        //     return response.json().then(data => {\r\n        //         return data[\"ok\"]\r\n        //     })\r\n        // }).then(data => {\r\n        //     console.log(data)\r\n        //     if (data){\r\n        //         console.log('LOADED AUTH PAGE')\r\n        //         window.location.assign('/auth')\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    function onl(){\r\n        const allCookies = get_cooks()\r\n        setEmail(allCookies['user'])\r\n    }\r\n    useEffect(()=>{\r\n        onl()\r\n    }, [])\r\n\r\n    function checkId(s) {\r\n        if (s){\r\n        for (let i = 0; i < s.length; ++i){\r\n            if ((s[i] >= '0' && s[i] <= '9') || s[i] == '-'){\r\n                continue\r\n            }\r\n            else{\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n    const loadChatIdTg = () => {\r\n        if (checkId(document.getElementsByClassName(\"idInput\")[0].value.split('/')[document.getElementsByClassName(\"idInput\")[0].value.split('/').length-2]) === true){\r\n            let id = '-100' + document.getElementsByClassName(\"idInput\")[0].value.split('/')[document.getElementsByClassName(\"idInput\")[0].value.split('/').length-2]\r\n            console.log(id)\r\n            const allCookies = get_cooks()\r\n            fetch(URL+\"/uploadTG\",{\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    \"chatID\": id,\r\n                    \"email\": allCookies['user']\r\n                })\r\n            })\r\n            .then(success => {\r\n                return success.json().then(data => {\r\n                    console.log(data)\r\n                    if (data['ok'] === true){\r\n                        console.log('success')\r\n                        setTgAddOk('tg1')\r\n                        setTgText('Успешно')\r\n                    }\r\n                    else{\r\n                        console.log('wrong')\r\n                        setTgAddOk('tg2')\r\n                        setTgText('Ошибка')\r\n                    }\r\n                    })\r\n                }\r\n            ) \r\n        }\r\n        else{\r\n            setTgAddOk('tg2')\r\n            setTgText('Ошибка')\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"lkMain\">\r\n            <div className='greetingLk'> \r\n                Личный кабинет\r\n            </div>\r\n            <button className='leaveBtn' onClick={(e)=>leave(e)}> Выйти </button>\r\n            <div className='userData'>\r\n                <div className='emailData'>\r\n                    Email: {email}\r\n                </div>\r\n                <div className='subscribeData'>\r\n                    Подписка: стандарт, до 31.12.2023\r\n                </div>\r\n            </div>\r\n            <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                <div className='linkAccText'>\r\n                    Привяжите аккаунты для автопостинга!\r\n                </div>\r\n                <div className='tgTutor'>\r\n                    Телеграм\r\n                </div>\r\n                <div className='tgTutor' id = \"text\">\r\n                    1) Добавьте в канал нашего бота&nbsp; <a href=\"https://t.me/TestMyChannelPostingBot\" target=\"_blank\" id = 'hrefToBot'>@TestMyChannelPostingBot</a>\r\n                </div>\r\n                <div className='tgTutor' id = \"text\">\r\n                    2) Назначьте его администратором\r\n                </div>\r\n                <div className='tgTutor' id = \"text\">\r\n                    3) Отправьте нам ссылку на любое сообщение из канала\r\n                </div>\r\n                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    <textarea className=\"idInput\" type = \"text\"/>\r\n                    <button className=\"idInputSub\" onClick={loadChatIdTg}> Отправить </button>\r\n                </div>\r\n                <div className=\"isTgAddOK\" id={TgAddOk}>\r\n                    {TgAddText}\r\n                </div>\r\n                <div className=\"vkTutor\">\r\n                    ВКонтакте\r\n                </div>\r\n                <div style={{marginTop: \"7px\"}} id = 'text'>\r\n                    1) Добавьте приложение в группу ВК\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Lk;","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\toHome\\toHome.js",[],[],"C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\toLk\\toAuth.js",[],[],"C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\home\\home.js",["73","74","75","76","77","78","79","80","81","82","83","84"],[],"C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\auth\\auth.js",["85","86","87","88","89","90","91","92","93","94","95","96","97"],[],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport './auth.css'\r\nimport { Link } from 'react-router-dom';\r\nimport Lk from '../lk/lk';\r\nimport ToLk from '../toLk/toLk';\r\n\r\nconst date = require('../config.json')\r\nconst HOST = date['HOST']\r\nconst PORT = date['PORT']\r\nconst URL = 'http://' + HOST + ':' + PORT\r\n\r\nfunction get_cooks() {\r\n    let cookies = document.cookie;\r\n    if (cookies === '') {\r\n        cookies = 'user= ;passw= '\r\n    }\r\n    cookies = cookies.split(';')\r\n    console.log(cookies)\r\n    let CookiesArr = {}\r\n    for (let i = 0; i < cookies.length; i++) {\r\n        let cookie = cookies[i];\r\n        let cookieParts = cookie.split(\"=\");\r\n        let cookieName = cookieParts[0].trim();\r\n        let cookieValue = cookieParts[1].trim();\r\n        CookiesArr[cookieName] = cookieValue\r\n    }\r\n    return CookiesArr\r\n}\r\n\r\nconst Auth = () => {\r\n\r\n    function onl (){\r\n        const allCookies = get_cooks()\r\n        fetch(URL + '/auth',{\r\n            method: 'POST',\r\n                body: JSON.stringify({\r\n                    mail: allCookies['user'],\r\n                    passw: allCookies['passw']\r\n                })\r\n        })\r\n        .then(response => {\r\n            console.log(\"Success\");\r\n            return response.json().then(data => {\r\n                return data[\"ok\"]\r\n            })\r\n        }).then(data => {\r\n            console.log(data)\r\n            if (data){\r\n                console.log('LOADED LK PAGE')\r\n                window.location.assign('/lk ')\r\n            }\r\n        })\r\n    }\r\n    onl()\r\n\r\n    const [enterError, setEnterError] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [emailDirty, setEmailDirty] = useState(false)\r\n    const [passwordDirty, setPasswordDirty] = useState(false)\r\n    const [emailError, setEmailError] = useState('Электронная почта не может быть пустой')\r\n    const [passwordError, setpasswordError] = useState('Пароль не может быть пустым')\r\n    const [formValid, setFormValid] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if (emailError || passwordError){\r\n            setFormValid(false)\r\n        }\r\n        else{\r\n            setFormValid(true)\r\n        }\r\n    }, [emailError, passwordError])\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name){\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEnterError('')\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            setEmailError('Некорректная электронная почта')\r\n        }\r\n        else{\r\n            setEmailError('')\r\n        }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setEnterError('')\r\n        setPassword(e.target.value)\r\n        if (e.target.value.length < 3 || e.target.value.length > 25){\r\n            setpasswordError('Пароль должен быть длиннее 3 и короче 25 символов')\r\n            if (!e.target.value){\r\n                setpasswordError('Пароль не может быть пустым')\r\n            }\r\n        }\r\n        else{\r\n            setpasswordError('')\r\n        }\r\n    }\r\n\r\n    const upload = (e) => {\r\n        console.log(email)\r\n        console.log('uploading data to server')\r\n        fetch(URL+'/auth',{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                mail: email,\r\n                passw: password\r\n            })\r\n        })\r\n        .then(response => {\r\n            console.log(\"Success\");\r\n            return response.json().then(data => {\r\n                return data[\"ok\"]\r\n            })\r\n        }).then(data => {\r\n            console.log(data)\r\n            if (data){\r\n                document.cookie = 'user=' + (email)\r\n                document.cookie = 'passw=' + (password)\r\n                console.log(document.cookie)\r\n                console.log('REDIRECTING TO LK')\r\n                window.location.assign('/lk ')\r\n            }\r\n            else{\r\n                setEnterError('Неверная почта или пароль')\r\n            }\r\n        })\r\n        e.preventDefault()\r\n    }\r\n\r\n    return(\r\n        <div className='mainAuth'>\r\n            <form className='authForm'>\r\n                <div> Авторизация </div>\r\n                {\r\n                    (emailDirty && emailError) &&\r\n                    <div className='errorEmailOrPass'> {emailError} </div>\r\n                }\r\n                {\r\n                    (enterError) &&\r\n                    <div className='errorEmailOrPass'> {enterError} </div>\r\n                }\r\n                <input onChange={e => emailHandler(e)} value = {email} onBlur={e => blurHandler(e)} className='emAuth' name = 'email' type = 'text' placeholder='Введите ваш email'/>\r\n                {\r\n                    (passwordDirty && passwordError) &&\r\n                    <div className='errorEmailOrPass'> {passwordError} </div>\r\n                }\r\n                <input onChange={e => passwordHandler(e)} value = {password} onBlur={e => blurHandler(e)} className='pswAuth' name = 'password' type = 'password' placeholder='Введите ваш пароль'/>\r\n                <button onClick={e => upload(e)} disabled = {!formValid} className='subAuth' type='submit'> Войти </button>\r\n                <Link to='/reg' className='toReg'> Нет аккаунта? Зарегистрироваться </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;","C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\reg\\reg.js",["98","99","100","101","102","103","104","105","106","107","108"],[],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport './reg.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst date = require('../config.json')\r\nconst HOST = date['HOST']\r\nconst PORT = date['PORT']\r\nconst URL = 'http://' + HOST + ':' + PORT\r\n\r\nfunction get_cooks() {\r\n    let cookies = document.cookie;\r\n    if (cookies === '') {\r\n        cookies = 'user= ;passw= '\r\n    }\r\n    cookies = cookies.split(';')\r\n    console.log(cookies)\r\n    let CookiesArr = {}\r\n    for (let i = 0; i < cookies.length; i++) {\r\n        let cookie = cookies[i];\r\n        let cookieParts = cookie.split(\"=\");\r\n        let cookieName = cookieParts[0].trim();\r\n        let cookieValue = cookieParts[1].trim();\r\n        CookiesArr[cookieName] = cookieValue\r\n    }\r\n    return CookiesArr\r\n}\r\n\r\nconst Reg = () => {\r\n    function onl (){\r\n        const allCookies = get_cooks()\r\n        fetch(URL + '/auth', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                login: allCookies['user'],\r\n                passw: allCookies['passw']\r\n            })\r\n        })\r\n        .then(response => {\r\n            console.log(\"Success\");\r\n            return response.json().then(data => {\r\n                return data[\"ok\"]\r\n            })\r\n        }).then(data => {\r\n            console.log(data)\r\n            if (data){\r\n                console.log('LOADED LK PAGE')\r\n                window.location.assign('/lk ')\r\n            }\r\n        })\r\n    }\r\n    onl()\r\n\r\n    const [enterError, setEnterError] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [emailDirty, setEmailDirty] = useState(false)\r\n    const [passwordDirty, setPasswordDirty] = useState(false)\r\n    const [emailError, setEmailError] = useState('Электронная почта не может быть пустой')\r\n    const [passwordError, setpasswordError] = useState('Пароль не может быть пустым')\r\n    const [formValid, setFormValid] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if (emailError || passwordError){\r\n            setFormValid(false)\r\n        }\r\n        else{\r\n            setFormValid(true)\r\n        }\r\n    }, [emailError, passwordError])\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name){\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEnterError('')\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            setEmailError('Некорректная электронная почта')\r\n        }\r\n        else{\r\n            setEmailError('')\r\n        }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setEnterError('')\r\n        setPassword(e.target.value)\r\n        if (e.target.value.length < 3 || e.target.value.length > 25){\r\n            setpasswordError('Пароль должен быть длиннее 3 и короче 25 символов')\r\n            if (!e.target.value){\r\n                setpasswordError('Пароль не может быть пустым')\r\n            }\r\n        }\r\n        else{\r\n            setpasswordError('')\r\n        }\r\n    }\r\n\r\n    const upload = (e) => {\r\n        console.log(email)\r\n        console.log('uploading data to server')\r\n        fetch(URL+'/reg',{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                mail: email,\r\n                passw: password\r\n            })\r\n        })\r\n        .then(response => {\r\n            console.log(\"Success\");\r\n            return response.json().then(data => {\r\n                return data[\"ok\"]\r\n            })\r\n        }).then(data => {\r\n            console.log(data)\r\n            if (data){\r\n                console.log('REDIRECTING TO LK')\r\n                document.cookie = 'user=' + (email)\r\n                document.cookie = 'passw=' + (password)\r\n                window.location.assign('/lk ')\r\n            }\r\n            else{\r\n                console.log('this email is already used')\r\n                setEnterError('Эта почта занята')\r\n            }\r\n        })\r\n        e.preventDefault()\r\n    }\r\n\r\n    return(\r\n        <div className='mainReg'>\r\n            <form className='regForm'>\r\n                <div> Регистрация </div>\r\n                {\r\n                    (emailDirty && emailError) &&\r\n                    <div className='errorEmailOrPass'> {emailError} </div>\r\n                }\r\n                {\r\n                    (enterError) &&\r\n                    <div className='errorEmailOrPass'> {enterError} </div>\r\n                }\r\n                <input onChange={e => emailHandler(e)} value = {email} onBlur={e => blurHandler(e)} className='emReg' name = 'email' type = 'text' placeholder='Введите ваш email'/>\r\n                {\r\n                    (passwordDirty && passwordError) &&\r\n                    <div className='errorEmailOrPass'> {passwordError} </div>\r\n                }\r\n                <input onChange={e => passwordHandler(e)} value = {password} onBlur={e => blurHandler(e)} className='pswReg' name = 'password' type = 'password' placeholder='Введите ваш пароль'/>\r\n                <button onClick={e => upload(e)} disabled = {!formValid} className='subReg' type='submit'> Зарегистрироваться </button>\r\n                <Link to='/auth' className='toAuth'> Есть аккаунт? Войти </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reg;",[],"C:\\Users\\georg\\OneDrive\\Документы\\prog\\QuickPost.v2\\QuickPost\\quickpost\\src\\toLk\\toAuthHome.js",[],[],{"ruleId":"109","severity":1,"message":"110","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":12},{"ruleId":"109","severity":1,"message":"113","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":11},{"ruleId":"109","severity":1,"message":"114","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":15},{"ruleId":"109","severity":1,"message":"115","line":7,"column":10,"nodeType":"111","messageId":"112","endLine":7,"endColumn":16},{"ruleId":"109","severity":1,"message":"116","line":7,"column":33,"nodeType":"111","messageId":"112","endLine":7,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":64,"column":34,"nodeType":"119","messageId":"120","endLine":64,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":74,"column":35,"nodeType":"119","messageId":"120","endLine":74,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":65,"column":54,"nodeType":"119","messageId":"120","endLine":65,"endColumn":56},{"ruleId":"121","severity":1,"message":"122","line":134,"column":59,"nodeType":"123","messageId":"124","endLine":134,"endColumn":139,"fix":"125"},{"ruleId":"109","severity":1,"message":"126","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"127","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"128","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"129","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":12},{"ruleId":"109","severity":1,"message":"130","line":34,"column":5,"nodeType":"111","messageId":"112","endLine":34,"endColumn":12},{"ruleId":"109","severity":1,"message":"131","line":34,"column":14,"nodeType":"111","messageId":"112","endLine":34,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":79,"column":18,"nodeType":"119","messageId":"120","endLine":79,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":82,"column":18,"nodeType":"119","messageId":"120","endLine":82,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":85,"column":18,"nodeType":"119","messageId":"120","endLine":85,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":97,"column":17,"nodeType":"123","endLine":97,"endColumn":54},{"ruleId":"117","severity":1,"message":"118","line":138,"column":35,"nodeType":"119","messageId":"120","endLine":138,"endColumn":37},{"ruleId":"121","severity":1,"message":"122","line":235,"column":17,"nodeType":"123","messageId":"124","endLine":235,"endColumn":108,"fix":"134"},{"ruleId":"109","severity":1,"message":"135","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":10},{"ruleId":"109","severity":1,"message":"129","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":12},{"ruleId":"136","severity":1,"message":"137","line":76,"column":9,"nodeType":"138","messageId":"139","endLine":83,"endColumn":10},{"ruleId":"140","severity":1,"message":"141","line":89,"column":33,"nodeType":"142","messageId":"143","endLine":89,"endColumn":34,"suggestions":"144"},{"ruleId":"140","severity":1,"message":"145","line":89,"column":41,"nodeType":"142","messageId":"143","endLine":89,"endColumn":42,"suggestions":"146"},{"ruleId":"140","severity":1,"message":"141","line":89,"column":57,"nodeType":"142","messageId":"143","endLine":89,"endColumn":58,"suggestions":"147"},{"ruleId":"140","severity":1,"message":"145","line":89,"column":65,"nodeType":"142","messageId":"143","endLine":89,"endColumn":66,"suggestions":"148"},{"ruleId":"140","severity":1,"message":"145","line":89,"column":74,"nodeType":"142","messageId":"143","endLine":89,"endColumn":75,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"145","line":89,"column":78,"nodeType":"142","messageId":"143","endLine":89,"endColumn":79,"suggestions":"150"},{"ruleId":"140","severity":1,"message":"141","line":89,"column":94,"nodeType":"142","messageId":"143","endLine":89,"endColumn":95,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"145","line":89,"column":102,"nodeType":"142","messageId":"143","endLine":89,"endColumn":103,"suggestions":"152"},{"ruleId":"140","severity":1,"message":"141","line":89,"column":119,"nodeType":"142","messageId":"143","endLine":89,"endColumn":120,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"145","line":89,"column":127,"nodeType":"142","messageId":"143","endLine":89,"endColumn":128,"suggestions":"154"},{"ruleId":"136","severity":1,"message":"137","line":73,"column":9,"nodeType":"138","messageId":"139","endLine":80,"endColumn":10},{"ruleId":"140","severity":1,"message":"141","line":86,"column":33,"nodeType":"142","messageId":"143","endLine":86,"endColumn":34,"suggestions":"155"},{"ruleId":"140","severity":1,"message":"145","line":86,"column":41,"nodeType":"142","messageId":"143","endLine":86,"endColumn":42,"suggestions":"156"},{"ruleId":"140","severity":1,"message":"141","line":86,"column":57,"nodeType":"142","messageId":"143","endLine":86,"endColumn":58,"suggestions":"157"},{"ruleId":"140","severity":1,"message":"145","line":86,"column":65,"nodeType":"142","messageId":"143","endLine":86,"endColumn":66,"suggestions":"158"},{"ruleId":"140","severity":1,"message":"145","line":86,"column":74,"nodeType":"142","messageId":"143","endLine":86,"endColumn":75,"suggestions":"159"},{"ruleId":"140","severity":1,"message":"145","line":86,"column":78,"nodeType":"142","messageId":"143","endLine":86,"endColumn":79,"suggestions":"160"},{"ruleId":"140","severity":1,"message":"141","line":86,"column":94,"nodeType":"142","messageId":"143","endLine":86,"endColumn":95,"suggestions":"161"},{"ruleId":"140","severity":1,"message":"145","line":86,"column":102,"nodeType":"142","messageId":"143","endLine":86,"endColumn":103,"suggestions":"162"},{"ruleId":"140","severity":1,"message":"141","line":86,"column":119,"nodeType":"142","messageId":"143","endLine":86,"endColumn":120,"suggestions":"163"},{"ruleId":"140","severity":1,"message":"145","line":86,"column":127,"nodeType":"142","messageId":"143","endLine":86,"endColumn":128,"suggestions":"164"},"no-unused-vars","'Rout' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"165","text":"166"},"'createRef' is defined but never used.","'useState' is defined but never used.","'ToHome' is defined but never used.","'ToLk' is defined but never used.","'postBtn' is defined but never used.","'photoDelBtn' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"167","text":"166"},"'Lk' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["168","169"],"Unnecessary escape character: \\\".",["170","171"],["172","173"],["174","175"],["176","177"],["178","179"],["180","181"],["182","183"],["184","185"],["186","187"],["188","189"],["190","191"],["192","193"],["194","195"],["196","197"],["198","199"],["200","201"],["202","203"],["204","205"],["206","207"],[4503,4503]," rel=\"noreferrer\"",[8362,8362],{"messageId":"208","fix":"209","desc":"210"},{"messageId":"211","fix":"212","desc":"213"},{"messageId":"208","fix":"214","desc":"210"},{"messageId":"211","fix":"215","desc":"213"},{"messageId":"208","fix":"216","desc":"210"},{"messageId":"211","fix":"217","desc":"213"},{"messageId":"208","fix":"218","desc":"210"},{"messageId":"211","fix":"219","desc":"213"},{"messageId":"208","fix":"220","desc":"210"},{"messageId":"211","fix":"221","desc":"213"},{"messageId":"208","fix":"222","desc":"210"},{"messageId":"211","fix":"223","desc":"213"},{"messageId":"208","fix":"224","desc":"210"},{"messageId":"211","fix":"225","desc":"213"},{"messageId":"208","fix":"226","desc":"210"},{"messageId":"211","fix":"227","desc":"213"},{"messageId":"208","fix":"228","desc":"210"},{"messageId":"211","fix":"229","desc":"213"},{"messageId":"208","fix":"230","desc":"210"},{"messageId":"211","fix":"231","desc":"213"},{"messageId":"208","fix":"232","desc":"210"},{"messageId":"211","fix":"233","desc":"213"},{"messageId":"208","fix":"234","desc":"210"},{"messageId":"211","fix":"235","desc":"213"},{"messageId":"208","fix":"236","desc":"210"},{"messageId":"211","fix":"237","desc":"213"},{"messageId":"208","fix":"238","desc":"210"},{"messageId":"211","fix":"239","desc":"213"},{"messageId":"208","fix":"240","desc":"210"},{"messageId":"211","fix":"241","desc":"213"},{"messageId":"208","fix":"242","desc":"210"},{"messageId":"211","fix":"243","desc":"213"},{"messageId":"208","fix":"244","desc":"210"},{"messageId":"211","fix":"245","desc":"213"},{"messageId":"208","fix":"246","desc":"210"},{"messageId":"211","fix":"247","desc":"213"},{"messageId":"208","fix":"248","desc":"210"},{"messageId":"211","fix":"249","desc":"213"},{"messageId":"208","fix":"250","desc":"210"},{"messageId":"211","fix":"251","desc":"213"},"removeEscape",{"range":"252","text":"253"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"254","text":"255"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"256","text":"253"},{"range":"257","text":"255"},{"range":"258","text":"253"},{"range":"259","text":"255"},{"range":"260","text":"253"},{"range":"261","text":"255"},{"range":"262","text":"253"},{"range":"263","text":"255"},{"range":"264","text":"253"},{"range":"265","text":"255"},{"range":"266","text":"253"},{"range":"267","text":"255"},{"range":"268","text":"253"},{"range":"269","text":"255"},{"range":"270","text":"253"},{"range":"271","text":"255"},{"range":"272","text":"253"},{"range":"273","text":"255"},{"range":"274","text":"253"},{"range":"275","text":"255"},{"range":"276","text":"253"},{"range":"277","text":"255"},{"range":"278","text":"253"},{"range":"279","text":"255"},{"range":"280","text":"253"},{"range":"281","text":"255"},{"range":"282","text":"253"},{"range":"283","text":"255"},{"range":"284","text":"253"},{"range":"285","text":"255"},{"range":"286","text":"253"},{"range":"287","text":"255"},{"range":"288","text":"253"},{"range":"289","text":"255"},{"range":"290","text":"253"},{"range":"291","text":"255"},{"range":"292","text":"253"},{"range":"293","text":"255"},[2676,2677],"",[2676,2676],"\\",[2684,2685],[2684,2684],[2700,2701],[2700,2700],[2708,2709],[2708,2708],[2717,2718],[2717,2717],[2721,2722],[2721,2721],[2737,2738],[2737,2737],[2745,2746],[2745,2745],[2762,2763],[2762,2762],[2770,2771],[2770,2770],[2596,2597],[2596,2596],[2604,2605],[2604,2604],[2620,2621],[2620,2620],[2628,2629],[2628,2628],[2637,2638],[2637,2637],[2641,2642],[2641,2641],[2657,2658],[2657,2657],[2665,2666],[2665,2665],[2682,2683],[2682,2682],[2690,2691],[2690,2690]]